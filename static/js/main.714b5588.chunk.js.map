{"version":3,"sources":["components/Carousel.tsx","constants.ts","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentImage","setCurrentImage","imageRight","imageLeft","length","widthCarousel","isStart","isEnd","useEffect","className","style","width","map","image","transform","transition","src","alt","cn","type","onClick","nextImage","App","state","input","setInput","handleChange","event","target","name","value","checked","newValue","prev","htmlFor","id","min","max","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.714b5588.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentImage, setCurrentImage] = useState(1);\n\n  const imageRight = (currentImage - 1) * itemWidth;\n  const imageLeft = images.length - frameSize + 1;\n\n  const widthCarousel = frameSize * itemWidth;\n  const isStart = currentImage === 1;\n  const isEnd = currentImage === imageLeft;\n\n  useEffect(() => {\n    if (currentImage > images.length - frameSize + 1) {\n      setCurrentImage(images.length - frameSize + 1);\n    }\n  }, [frameSize, images.length]);\n\n  const handlePrevImage = () => {\n    if (!isStart) {\n      const nextImage = currentImage - step;\n\n      setCurrentImage(nextImage < 1\n        ? 1\n        : nextImage);\n    } else if (infinite) {\n      setCurrentImage(imageLeft);\n    }\n  };\n\n  const handleNextImage = () => {\n    if (!isEnd) {\n      const nextImage = currentImage + step;\n\n      setCurrentImage(nextImage > imageLeft\n        ? imageLeft\n        : nextImage);\n    } else if (infinite) {\n      setCurrentImage(1);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel_list\"\n        style={{ width: `${widthCarousel}px` }}\n      >\n        {images.map(image => (\n          <li\n            key={image}\n            className=\"Carousel_item\"\n            style={{\n              transform: `translateX(-${imageRight}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              className=\"Carousel_image\"\n              src={image}\n              alt={image}\n              style={{ width: `${itemWidth}px` }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel_buttons\">\n        <button\n          className={cn('Carousel_button', {\n            'Carousel_button--disabled': isStart && !infinite,\n          })}\n          type=\"button\"\n          onClick={handlePrevImage}\n        >\n          Prev\n        </button>\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          className={cn('Carousel_button', {\n            'Carousel_button--disabled': isEnd && !infinite,\n          })}\n          onClick={handleNextImage}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","export const images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n","import React, { useState } from 'react';\nimport Carousel from './components/Carousel';\nimport { images } from './constants';\n\nimport './App.scss';\n\ninterface State {\n  images: string[];\n}\n\nconst App: React.FC = () => {\n  const state: State = {\n    images,\n  };\n\n  const [input, setInput] = useState({\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name,\n      value,\n      type,\n      checked,\n    } = event.target;\n    const newValue = type === 'checkbox' ? checked : +value;\n\n    setInput((prev) => {\n      return { ...prev, [name]: newValue };\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\" className='App_title'>Carousel with {images.length} images</h1>\n\n      <Carousel\n        images={state.images}\n        step={input.step}\n        frameSize={input.frameSize}\n        itemWidth={input.itemWidth}\n        animationDuration={input.animationDuration}\n        infinite={input.infinite}\n      />\n\n      <div className=\"App_inputs\">\n        <label htmlFor=\"itemWidth\">\n          Item Width:\n          <input\n            type=\"number\"\n            id=\"itemWidth\"\n            name=\"itemWidth\"\n            value={input.itemWidth}\n            min={130}\n            max={260}\n            step={5}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label htmlFor=\"frameSize\">\n          Frame Size:\n          <input\n            type=\"number\"\n            id=\"frameSize\"\n            name=\"frameSize\"\n            value={input.frameSize}\n            min={1}\n            max={state.images.length}\n            step={1}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label htmlFor=\"step\">\n          Step:\n          <input\n            type=\"number\"\n            id=\"step\"\n            name=\"step\"\n            value={input.step}\n            min={1}\n            max={state.images.length}\n            step={1}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label htmlFor=\"animationDuration\">\n          Animation Duration:\n          <input\n            type=\"number\"\n            id=\"animationDuration\"\n            name=\"animationDuration\"\n            value={input.animationDuration}\n            min={500}\n            max={3000}\n            step={500}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label htmlFor=\"infinite\">\n          Infinite:\n          <input\n            id=\"infinite\"\n            name=\"infinite\"\n            type=\"checkbox\"\n            checked={input.infinite}\n            onChange={handleChange}\n          />\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}